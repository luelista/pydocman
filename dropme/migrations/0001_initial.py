# -*- coding: utf-8 -*-
# Generated by Django 1.9.6 on 2016-05-23 20:09
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import dropme.helper
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('auth', '0007_alter_validators_add_error_messages'),
    ]

    operations = [
        migrations.CreateModel(
            name='Clipboard',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('token', models.CharField(default=dropme.models.random_token_clipboard, max_length=12, unique=True)),
                ('title', models.CharField(blank=True, max_length=50)),
                ('viewmode', models.CharField(default='tile', max_length=10)),
                ('sortorder', models.CharField(default='upload', max_length=10)),
                ('listable', models.IntegerField(default=0)),
                ('indexed', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('icon', models.CharField(max_length=90)),
                ('allow_public_view', models.BooleanField(help_text='Allow anyone with the link to view this clipboard')),
                ('allow_public_add_documents', models.BooleanField(help_text='Allow anyone with the link to add documents to this clipboards')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='clipboards_created_by', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=80)),
                ('url_filename', models.CharField(max_length=80)),
                ('doc_date', models.DateField(auto_now_add=True)),
                ('filetype', models.CharField(max_length=20)),
                ('subtype', models.CharField(max_length=20)),
                ('filesize', models.IntegerField()),
                ('page_count', models.IntegerField()),
                ('comment', models.TextField()),
                ('source_url', models.TextField()),
                ('source_title', models.TextField()),
                ('uploader_ip', models.CharField(max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('clipboard', models.ForeignKey(db_column='cbid', on_delete=django.db.models.deletion.CASCADE, to='dropme.Clipboard')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents_created_by', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='DocumentTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=50)),
                ('document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dropme.Document')),
            ],
        ),
        migrations.CreateModel(
            name='GroupPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('allow_view', models.BooleanField()),
                ('allow_add_documents', models.BooleanField()),
                ('allow_change', models.BooleanField()),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('clipboard', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dropme.Clipboard')),
                ('for_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='auth.Group')),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keyword', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='UserPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('allow_view', models.BooleanField()),
                ('allow_add_documents', models.BooleanField()),
                ('allow_change', models.BooleanField()),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('clipboard', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dropme.Clipboard')),
                ('for_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='documenttag',
            name='tag',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dropme.Tag'),
        ),
        migrations.AddField(
            model_name='document',
            name='tags',
            field=models.ManyToManyField(through='dropme.DocumentTag', to='dropme.Tag'),
        ),
        migrations.AddField(
            model_name='document',
            name='updated_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents_updated_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='clipboard',
            name='groups',
            field=models.ManyToManyField(through='dropme.GroupPermission', to='auth.Group'),
        ),
        migrations.AddField(
            model_name='clipboard',
            name='users',
            field=models.ManyToManyField(through='dropme.UserPermission', to=settings.AUTH_USER_MODEL),
        ),
    ]
